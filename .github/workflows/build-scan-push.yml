name: BUILD-SCAN-PUSH

on:
  push:
    branches: [ '**' ]

jobs:

  get-matrix-values:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-var.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - id: set-var
        run: |
          echo 'image<<EOF' >> $GITHUB_OUTPUT
          cat ./image-matrix.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build-images:
    runs-on: ubuntu-latest
    needs:  get-matrix-values
    strategy:
      matrix:
        target: ["development", "production"]
        image: ${{fromJSON(needs.get-matrix-values.outputs.image)}}
    steps:
      - uses: actions/checkout@v3
      - id: setEnv
        name: Set Job env vars
        run: |
          cat JOB.env >> $GITHUB_ENV

      - id: setImageDetails
        name: Set image name and latest tag
        run: |
          if [ ${{matrix.target}} = "production" ]
          then
            DOCKER_REPO_NAME="defradigital/$IMAGE_NAME"
          else
            DOCKER_REPO_NAME="defradigital/$IMAGE_NAME-${{matrix.target}}"
          fi

          echo "dockerRepoName=$DOCKER_REPO_NAME" >> $GITHUB_OUTPUT
          echo "fullImageName=$DOCKER_REPO_NAME:$DEFRA_VERSION-node${{matrix.image.runTimeVersion}}" >> $GITHUB_OUTPUT

          if [ ${{matrix.image.latest}} = true ]
          then
            echo "latestTag=--tag $DOCKER_REPO_NAME:latest" >> $GITHUB_OUTPUT
          else
            echo "latestTag=" >> $GITHUB_OUTPUT
          fi

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --no-cache \
          --target=${{matrix.target}} \
          --build-arg DEFRA_VERSION=$DEFRA_VERSION \
          --build-arg BASE_VERSION=${{matrix.image.runtimeVersion}}-alpine${{matrix.image.alpineVersion}} \
          --tag ${{steps.setImageDetails.outputs.fullImageName}} \
          ${{steps.setImageDetails.outputs.latestTag}}
          docker images

      - name: run Anchore Grype scan
        id: scan
        if: ${{ matrix.target == 'production' }}
        uses: anchore/scan-action@v3
        with:
          image: ${{steps.setImageDetails.outputs.fullImageName}}
          fail-build: true
          severity-cutoff: "medium"
          only-fixed: true

      - name: Tag image
        run: |
          echo "Tags are ${{ join(matrix.image.tags, ' ') }}"
          for TAG in ${{ join(matrix.image.tags, ' ') }}
          do
            echo "creating tag ${{steps.setImageDetails.outputs.dockerRepoName}}:$TAG"
            docker image tag ${{steps.setImageDetails.outputs.fullImageName}} ${{steps.setImageDetails.outputs.dockerRepoName}}:$TAG
          done

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - id: pushImage
        name: push docker image
        if: github.ref == 'refs/heads/master'
        run: |
          docker image push ${{steps.setImageDetails.outputs.fullImageName}}
          for TAG in ${{ join(matrix.image.tags, ' ') }}
          do
            docker image push ${{steps.setImageDetails.outputs.dockerRepoName}}:$TAG
          done

      - name: Upload Anchore Grype SARIF report
        if: ${{ failure() && matrix.target == 'production' }}
        uses: actions/upload-artifact@v2
        with:
          name: anchore-reports-node-${{ matrix.image.runtimeVersion }}
          path: ${{ steps.scan.outputs.sarif }}
